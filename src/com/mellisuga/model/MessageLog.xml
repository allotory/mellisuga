<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mellisuga.dao.MessageLogDAO">
    <!-- 插入 -->
    <!-- useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；
    	 keyProperty="id"指定把获取到的主键值注入到MessageText的id属性--> 
    <insert id="insertMessageLog" parameterType="MessageLog" useGeneratedKeys="true" keyProperty="id">
    	insert into message_log(
    		sender_id,
	    	receiver_id, 
	    	text_id, 
	    	send_time,
	    	read_time, 
	    	message_type,
	    	sender_isdel,
	    	receiver_isdel, 
	    	is_read,
	    	message_group_id
    	) 
    	values(
    		#{sender_id},
    		#{receiver_id},
    		#{text_id},
    		#{send_time},
    		#{read_time},
    		#{message_type},
    		#{sender_isdel},
    		#{receiver_isdel},
    		#{is_read},
    		#{message_group_id}
    	)
    </insert>
    
    <!-- 查询单一数据 -->
	<select id="isExistInMessageLog" parameterType="java.util.HashMap" resultType="int">
        select count(*) from message_log where receiver_id=#{receiver_id} and message_type=#{message_type} 
        	and message_group_id=#{message_group_id}
    </select>
    
    <!-- 查询单一数据 -->
	<select id="isSysExistInMessageLog" parameterType="java.util.HashMap" resultType="int">
        select count(*) from message_log where receiver_id=#{receiver_id} and message_type=#{message_type} 
        	and text_id=#{text_id}
    </select>
    
    <resultMap type="MessageLog" id="MessageLogList">
    	<id column="id" property="id"/>
    	<result column="sender_id" property="sender_id"/>
    	<result column="receiver_id" property="receiver_id"/>
    	<result column="text_id" property="text_id"/>
    	<result column="send_time" property="send_time"/>
    	<result column="read_time" property="read_time"/>
    	<result column="message_type" property="message_type"/>
    	<result column="sender_isdel" property="sender_isdel"/>
    	<result column="receiver_isdel" property="receiver_isdel"/>
    	<result column="is_read" property="is_read"/>
    	<result column="message_group_id" property="message_group_id"/>
    </resultMap>
    <select id="queryMessageLogByReceiverId" parameterType="int" resultMap="MessageLogList">
    	select * from message_log where receiver_id=#{receiver_id} order by send_time desc
    </select>
    
    <update id="updateMessageLog" parameterType="MessageLog">
    	update message_log set 
	    	sender_id=#{sender_id},
	   		receiver_id=#{receiver_id},
	   		text_id=#{text_id},
	   		send_time=#{send_time},
	   		read_time=#{read_time},
	   		message_type=#{message_type},
	   		sender_isdel=#{sender_isdel},
	   		receiver_isdel=#{receiver_isdel},
	   		is_read=#{is_read},
	   		message_group_id=#{message_group_id}
   		where id=#{id}
    </update>
    
    <select id="queryUnreadMessageByReceiverId" parameterType="int" resultType="int">
    	select count(*) from message_log where receiver_id=#{receiver_id} and is_read=0
    </select>
    
    <select id="queryMessageLogByIdTypeGroup" parameterType="java.util.HashMap" resultType="MessageLog">
    	select * from message_log where receiver_id=#{receiver_id} and message_type=#{message_type} 
        	and message_group_id=#{message_group_id}
    </select>
    
    <select id="queryMessageLogByIdTextType" parameterType="java.util.HashMap" resultType="MessageLog">
    	select * from message_log where receiver_id=#{receiver_id} and message_type=#{message_type} 
        	and text_id=#{text_id}
    </select>
    
    <select id="queryBasicUnreadByReceiverId" parameterType="int" resultType="int">
    	select count(*) from message_log where receiver_id=#{receiver_id} and is_read=0
    		 and message_type!="NewAnswerMsg" and message_type!="SystemNotice"
    </select>
</mapper>


